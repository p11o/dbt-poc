version: '3.7'

# Settings and configurations that are common for all containers
x-minio-common: &minio-common
  image: quay.io/minio/minio:RELEASE.2022-05-08T23-50-31Z
  command: server --console-address ":9001" http://minio{1...2}/data{1...2}
  expose:
  - "9000"
  - "9001"
  environment:
    MINIO_ROOT_USER: minioadmin
    MINIO_ROOT_PASSWORD: minioadmin
  healthcheck:
    test: ["CMD", "curl", "-f", "http://localhost:9000/minio/health/live"]
    interval: 30s
    timeout: 20s
    retries: 3

x-redash-service: &redash-service
  image: redash/redash:10.0.0.b50363
x-redash-environment: &redash-environment
  REDASH_LOG_LEVEL: "INFO"
  REDASH_REDIS_URL: "redis://redis:6379/0"
  REDASH_DATABASE_URL: "postgresql://postgres@postgres/postgres"
  REDASH_RATELIMIT_ENABLED: "false"
  REDASH_MAIL_DEFAULT_SENDER: "redash@example.com"
  REDASH_MAIL_SERVER: "email"
  REDASH_ENFORCE_CSRF: "true"
  REDASH_COOKIE_SECRET: thesecret

# starts 4 docker containers running minio server instances.
# using nginx reverse proxy, load balancing, you can access
# it through port 9000.
services:
  minio1:
    <<: *minio-common
    volumes:
    - data1-1:/data1
    - data1-2:/data2
  minio2:
    <<: *minio-common
    volumes:
    - data2-1:/data1
    - data2-2:/data2

  miniolb:
    image: nginx:1.19.2-alpine
    hostname: nginx
    volumes:
    - ./conf/nginx.conf:/etc/nginx/nginx.conf:ro
    ports:
    - "9000:9000"
    - "9001:9001"
    depends_on:
    - minio1
    - minio2

  hive-metastore:
    image: mprestifilippo/hive-metastore:2.3.9
    volumes:
    - ./conf/core-site.xml:/home/hive/hive/conf/core-site.xml
    - ./conf/hive-site.xml:/home/hive/hive/conf/hive-site.xml
    depends_on:
    - hive-pg
  hive-pg:
    image: postgres:14.2
    environment:
      POSTGRES_USER: hive
      POSTGRES_PASSWORD: password
      POSTGRES_DB: metastore
    volumes:
    - ./conf/hive-schema-2.3.9.sql:/docker-entrypoint-initdb.d/hive-schema-2.3.9.sql
    - hive-pg:/var/lib/postgresql/data

  spark:
    image: docker.io/bitnami/spark:3
    environment:
      - SPARK_MODE=master
      - SPARK_RPC_AUTHENTICATION_ENABLED=no
      - SPARK_RPC_ENCRYPTION_ENABLED=no
      - SPARK_LOCAL_STORAGE_ENCRYPTION_ENABLED=no
      - SPARK_MASTER_HOST=0.0.0.0
      # - SPARK_SSL_ENABLED=no
    ports:
      - '8080:8080'
    volumes:
    - ./conf/core-site.xml:/opt/bitnami/spark/conf/core-site.xml
    - ./conf/hive-site.xml:/opt/bitnami/spark/conf/hive-site.xml
    - ./conf/spark/log4j.properties:/opt/bitnami/spark/conf/log4j.properties
    - ./conf/spark/spark-defaults.conf:/opt/bitnami/spark/conf/spark-defaults.conf
  spark-worker:
    image: docker.io/bitnami/spark:3
    environment:
      - SPARK_MODE=worker
      - SPARK_MASTER_URL=spark://spark:7077
      - SPARK_WORKER_MEMORY=1G
      - SPARK_WORKER_CORES=1
      - SPARK_RPC_AUTHENTICATION_ENABLED=no
      - SPARK_RPC_ENCRYPTION_ENABLED=no
      - SPARK_LOCAL_STORAGE_ENCRYPTION_ENABLED=no
      # - SPARK_SSL_ENABLED=no
    volumes:
    - ./conf/core-site.xml:/opt/bitnami/spark/conf/core-site.xml
    - ./conf/hive-site.xml:/opt/bitnami/spark/conf/hive-site.xml
    - ./conf/spark/spark-defaults.conf:/opt/bitnami/spark/conf/spark-defaults.conf

  cli:
    build: .
    user: user
    command: sleep infinity
    volumes:
    - ./tutorial:/home/user/tutorial
    - ./conf/profiles.yml:/home/user/.dbt/profiles.yml
    - ./conf/squirrel-sql-4.4.0-standard.jar:/sql.jar

volumes:
  data1-1:
  data1-2:
  data2-1:
  data2-2:
  hive-pg:
